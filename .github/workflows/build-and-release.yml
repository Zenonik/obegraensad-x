name: Build and Release Firmware

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # --- Quellcode holen ---
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Python / PlatformIO vorbereiten ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install PlatformIO
        run: pip install platformio

      # --- Firmware bauen ---
      - name: Build firmware
        run: pio run

      # --- Versionstext erzeugen ---
      - name: Generate version.txt
        run: echo "v${{ github.run_number }}" > version.txt

      # === AUTOMATISCHER CHANGELOG (Option A) ===
      - name: Install Ruby and changelog generator (user install)
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby-full
          gem install --user-install github_changelog_generator

          # Pfad zum lokalen Gem-Bin-Ordner dynamisch ermitteln und für spätere Schritte verfügbar machen
          GEM_PATH=$(ruby -e 'print RbConfig::CONFIG["ruby_version"]')
          echo "$HOME/.local/share/gem/ruby/$GEM_PATH/bin" >> $GITHUB_PATH

      - name: Generate changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 --match "v*" 2>/dev/null || echo "")
          echo "Letztes Tag: $LAST_TAG"
          github_changelog_generator \
            --user ${{ github.repository_owner }} \
            --project $(basename ${{ github.repository }}) \
            --token ${{ secrets.GITHUB_TOKEN }} \
            --since-tag "$LAST_TAG" \
            --future-release "v${{ github.run_number }}" \
            --output CHANGELOG.md

      # --- Release erstellen ---
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Firmware v${{ github.run_number }}"
          body_path: CHANGELOG.md
          files: |
            .pio/build/esp32dev/firmware.bin
            version.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}